name: Lint and make PR's

on:
  push:
    branches-ignore:
      - main

jobs:
  lint-test:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: set up helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: helm-check
        uses: igabaydulin/helm-check-action@0.1.4
        env:
          CHART_LOCATION: .

      - name: get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "(version:.*|version:.*${{steps.previoustag.outputs.tag }})"
          replace: "version: ${{ steps.previoustag.outputs.tag }}+${{ env.GITHUB_SHA_SHORT }}"
          include: Chart.yaml

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v7
        with:
          add: Chart.yaml
          message: "Chart version updated by $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          tag: ${{ steps.previoustag.outputs.tag }}+${{ env.GITHUB_SHA_SHORT }} --force

#      - name: update chart.yml
#        run: "sed -i 's/"^version: 0.0.1"/new-text/g' input.txt"
#
#      - name: Bump version and push tag
#        uses: ChloePlanet/github-tag-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          CUSTOM_TAG: ${{ steps.previoustag.outputs.tag }}-${{ env.GITHUB_EVENT_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}

#      - name: Print slug/short variables
#        run: |
#          echo "Slug variables"
#          echo " - ${{ env.GITHUB_REF_SLUG }}"
#          echo " - ${{ env.GITHUB_HEAD_REF_SLUG }}"
#          echo " - ${{ env.GITHUB_BASE_REF_SLUG }}"
#          echo " - ${{ env.GITHUB_REPOSITORY_SLUG }}"
#          # output e.g. : master feat-new-feature v1.0.0 product-1.0.0-rc.2 new-awesome-product
#          echo "Slug URL variables"
#          echo " - ${{ env.GITHUB_REF_SLUG_URL }}"
#          echo " - ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
#          echo " - ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
#          echo " - ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
#          # output e.g. : master feat-new-feature v1-0-0 product-1-0-0-rc-2 new-awesome-product
#          echo "Short SHA variables"
#          echo " - ${{ env.GITHUB_SHA_SHORT }}"


#  make-local-pr:
#    needs: [lint-test]
#    name: local PR
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Inject slug/short variables
#        uses: rlespinasse/github-slug-action@v3.x
#
#      - name: pull-request-local
#        uses: repo-sync/pull-request@v2
#        with:
#          destination_branch: "main"
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          pr_title: "Pulling ${{ env.GITHUB_EVENT_REF_SLUG }} into main"
#          pr_template: ".github/pull_request_template.md"
#          pr_reviewer: "wei,worker"
#          pr_label: "auto-pr"
#
#  make-external-pr:
#    needs: [lint-test]
#    name: PR to the chart repo
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Inject slug/short variables
#        uses: rlespinasse/github-slug-action@v3.x
#
#      - name: Copy files
#        run: |
#          mkdir ${{ env.GITHUB_REPOSITORY_NAME_PART }}
#          cp -r templates ${{ env.GITHUB_REPOSITORY_NAME_PART }}
#          cp {.helmignore,Chart.yaml,LICENSE,README.md,values.yaml} ${{ env.GITHUB_REPOSITORY_NAME_PART }}
#
#      - name: pull-request-repo
#        uses: paygoc6/action-pull-request-another-repo@v1.0.1
#        env:
#          API_TOKEN_GITHUB: ${{ secrets.DLAVRUSHKO_PERSONAL_ACCESS_TOKEN }}
#        with:
#          source_folder: ${{ env.GITHUB_REPOSITORY_NAME_PART }}
#          destination_repo: 'iits-consulting/helm-charts'
#          destination_folder: 'charts'
#          destination_base_branch: master
#          destination_head_branch: ${{ env.GITHUB_EVENT_REF_SLUG }}
#          user_email: 'denis.lavrushko@iits-consulting.de'
#          user_name: 'dlavrushk0'
#          pull_request_reviewers: 'dlavrushk0'

############ leave this for main chart repo #############
#      - uses: actions/setup-python@v2
#        with:
#          python-version: 3.7
#
#      - name: Set up chart-txesting
#        uses: helm/chart-testing-action@v2.0.1
#
#      - name: Run chart-testing (list-changed)
#        id: list-changed
#        run: |
#          changed=$(ct list-changed)
#          if [[ -n "$changed" ]]; then
#            echo "::set-output name=changed::true"
#          fi
#
#
#      - name: Run chart-testing (lint)
#        run: ct lint
#
#      - name: Create kind cluster
#        uses: helm/kind-action@v1.0.0
#        if: steps.list-changed.outputs.changed == 'true'
#
#      - name: Run chart-testing (install)
#        run: ct install
