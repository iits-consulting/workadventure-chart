name: Lint and make PR's

on:
  push:
    paths-ignore:
#      - ".github/**"
      - "*.md"
      - "LICENSE"
    branches-ignore:
      - main

env:
  HELM_EXPERIMENTAL_OCI: 1
  ACR_NAME: iitscharts
  ACR_USER_NAME: iits-releaser

jobs:
  lint-test:
    name: Lint and update chart version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: identify
        run: |
          export GIT_PR_SHA="${{ github.sha }}"
          export GIT_PR_SHA_SHORT="${GIT_PR_SHA:0:10}"

          echo "::set-output name=git_pr_sha::${GIT_PR_SHA}"
          echo "::set-output name=git_pr_sha_short::${GIT_PR_SHA_SHORT}"
          echo "GIT_SHA_SHORT=`echo ${GIT_PR_SHA_SHORT}`" >> $GITHUB_ENV

      - name: Get new tag
        id: newtag
        run: |
          ct=$(cat Chart.yaml | tr -d " " | grep -oP '(?<=version:)\d+\.\d+\.\d+')
          if [[ -z $ct ]]
          then
            echo "ERROR: Check your chart version in Chart.yaml file!!!"
            echo "It should have SemVer numbers and be processed by '(?<=version:)\d+\.\d+\.\d+' regexp"
            exit 1
          fi
          echo "::set-output name=git_new_tag::$ct-${{ env.GIT_SHA_SHORT }}"


      - name: Find and replace version in Chart.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "version:.*"
          replace: "version: ${{ steps.newtag.outputs.git_new_tag }}"
          include: Chart.yaml

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v7
        with:
          add: Chart.yaml
          message: "[Auto-update] version updated"
          tag: ${{ steps.newtag.outputs.git_new_tag }}

      - name: Bump version and push tag
        uses: ChloePlanet/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{ steps.newtag.outputs.git_new_tag }}

      - name: get sha
        id: sha
        run: |
          sha_new=$(git rev-parse HEAD)
          echo $sha_new
          echo "::set-output name=sha::$sha_new"
      - name: CHECKING  NEW TAG
        run: |
          echo ${{ steps.sha.outputs.SHA }}
          echo ${{ steps.newtag.outputs.git_new_tag }}

    outputs:
      git_pr_sha: ${{ steps.identify.outputs.git_pr_sha }}
      git_pr_sha_short: ${{ steps.identify.outputs.git_pr_sha_short }}
      new_sha: ${{ steps.sha.outputs.sha }}
      new_tag: ${{ steps.newtag.outputs.git_new_tag }}

  make-local-pr:
    needs: [lint-test]
    name: Make/Update local PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Make/Update local PR
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "main"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Pulling ${{ env.GITHUB_EVENT_REF_SLUG }} into main"
          pr_template: ".github/pull_request_template.md"
          pr_reviewer: "wei,worker"
          pr_label: "auto-pr"

  make-external-pr:
    needs: [lint-test]
    name: Release chart to ACR
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.lint-test.outputs.new_sha }}
          fetch-depth: 0

      - name: Setting branch name variable
        run: echo "BRANCH_NAME=$(echo "${GITHUB_REF##*/}")" >> $GITHUB_ENV

      - name: Install helm
        uses: Azure/setup-helm@v1.1

      - name: Login to ACR using helm
        run: |
          echo ${{ secrets.ACR_RELEASER_TOKEN }} | helm registry login ${{ env.ACR_NAME }}.azurecr.io --username ${{ env.ACR_USER_NAME }} --password-stdin

      - name: Save helm chart to locally
        run: |
          helm chart save . ${{ env.ACR_NAME }}.azurecr.io/${{ github.event.repository.name }}:${{ needs.lint-test.outputs.new_tag }}

      - name: Publish chart to the ACR
        run: |
          helm chart push ${{ env.ACR_NAME }}.azurecr.io/${{ github.event.repository.name }}:${{ needs.lint-test.outputs.new_tag }}
