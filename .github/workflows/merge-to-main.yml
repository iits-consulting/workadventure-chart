name: Merge stable and release

on:
  push:
    branches:
      - main

env:
  HELM_EXPERIMENTAL_OCI: 1
  ACR_NAME: iitsc
  ACR_USER_NAME: iits-releaser
  SLACK_CHANNEL_ID: "C02AJKXC8UT"

jobs:
  prepare-stable:
    name: Enroll new chart version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check PR labels action step
        id: check_pr_labels_major
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["major"]'

      - name: Check PR labels action step
        id: check_pr_labels_minor
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["minor"]'

      - name: Check PR labels action step
        id: check_pr_labels_patch
        uses: shioyang/check-pr-labels-on-push-action@v1.0.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: '["patch"]'

      - name: Select proper label
        run: |
          if [[ "${{ steps.check_pr_labels_major.outputs.result }}" = true ]]; then
            echo "CORRECT_LABEL=$(echo "major")" >> $GITHUB_ENV
          elif [[ "${{ steps.check_pr_labels_minor.outputs.result }}" = true ]]; then
            echo "CORRECT_LABEL=$(echo "minor")" >> $GITHUB_ENV
          elif [[ "${{ steps.check_pr_labels_patch.outputs.result }}" = true ]]; then
            echo "CORRECT_LABEL=$(echo "patch")" >> $GITHUB_ENV
          else
            echo "CORRECT_LABEL=$(echo "patch")" >> $GITHUB_ENV
          fi

      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0
      - name: Put new version to the ENV
        run: |
          t=$(echo "${{ steps.previoustag.outputs.tag }}" | cut -d- -f1)
          echo "CURRENT_VERSION=`echo ${t}`" >> $GITHUB_ENV
      - name: Calculate new version
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump_semver
        with:
          current_version: ${{ env.CURRENT_VERSION }}
          level: ${{ env.CORRECT_LABEL }}
      - name: Find and replace version in Chart.yaml
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "version:.*"
          replace: "version: ${{ steps.bump_semver.outputs.new_version }}"
          include: Chart.yaml
      - name: Commit and push changes
        uses: EndBug/add-and-commit@v7
        with:
          add: Chart.yaml
          message: "[Auto-update] version updated"
          tag: ${{ steps.bump_semver.outputs.new_version }}
      - name: Bump version and push tag
        uses: ChloePlanet/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{ steps.bump_semver.outputs.new_version }}
      - name: Put variables to the outputs
        id: sha_and_tag
        run: |
          sha_new=$(git rev-parse HEAD)
          echo $sha_new
          echo "::set-output name=sha::$sha_new"
          echo "::set-output name=tag::${{ steps.bump_semver.outputs.new_version }}"

    outputs:
      new_sha: ${{ steps.sha_and_tag.outputs.sha }}
      new_tag: ${{ steps.sha_and_tag.outputs.tag }}

  release:
    needs: [prepare-stable]
    name: Release stable chart to the ACR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare-stable.outputs.new_sha }}
          fetch-depth: 0
      - name: Install helm
        uses: Azure/setup-helm@v1.1
      - name: Login to ACR using helm
        run: |
          echo ${{ secrets.ACR_RELEASER_TOKEN }} | helm registry login ${{ env.ACR_NAME }}.azurecr.io --username ${{ env.ACR_USER_NAME }} --password-stdin
      - name: Save helm chart to locally
        run: |
          helm chart save . ${{ env.ACR_NAME }}.azurecr.io/charts/${{ github.event.repository.name }}:${{ needs.prepare-stable.outputs.new_tag }}
      - name: Publish chart to the ACR
        run: |
          helm chart push ${{ env.ACR_NAME }}.azurecr.io/charts/${{ github.event.repository.name }}:${{ needs.prepare-stable.outputs.new_tag }}

      - name: Notify slack success
        if: ${{ success() }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: iits-consulting/slack-action@master
        with:
          channel_id: ${{ env.SLACK_CHANNEL_ID }}
          payload_file: ".github/success_slack_message.json"
          replaceme_1: ${{ github.event.repository.name }}
          replaceme_2: "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          replaceme_3: "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          replaceme_4: ${{ needs.prepare-stable.outputs.new_tag }}
      - name: Notify slack failed
        if: ${{ failure() }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: iits-consulting/slack-action@master
        with:
          channel_id: ${{ env.SLACK_CHANNEL_ID }}
          payload_file: ".github/failed_slack_message.json"
          replaceme_1: ${{ github.event.repository.name }}
          replaceme_2: "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          replaceme_3: "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          replaceme_4: ${{ needs.prepare-stable.outputs.new_tag }}
      - name: Notify slack aborted
        if: ${{ cancelled() }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: iits-consulting/slack-action@master
        with:
          channel_id: ${{ env.SLACK_CHANNEL_ID }}
          payload_file: ".github/aborted_slack_message.json"
          replaceme_1: ${{ github.event.repository.name }}
          replaceme_2: "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          replaceme_3: "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          replaceme_4: ${{ needs.prepare-stable.outputs.new_tag }}